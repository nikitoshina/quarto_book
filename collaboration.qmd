---
title: "Collaboration"
editor: visual
---


## `trackdown` and Google Docs

Projects often involve collaborators with varying technical proficiency, and using markdown files might pose challenges for some stakeholders. One approach could be to render a Microsoft Word document and transfer edits back into markdown later. However, this method can be laborious, and our goal is to work smarter, not harder. A solution to this issue is to use a package called `trackdown`, which enables collaboration on narrative text through Google Docs. To edit .qmd files, you will need the version of `trackdown` >= 1.3, which can be downloaded from GitHub using the following command:

```{r eval = FALSE}
# install.packages("remotes")
remotes::install_github("claudiozandonella/trackdown",
                         build_vignettes = TRUE)
library(trackdown)
```

At the moment, the API credentials for the package have been exhausted, so you'll need to set up your own. To do this, follow the straightforward guide provided by the developers: <https://claudiozandonella.github.io/trackdown/articles/oauth-app-configuration.html>.

```{r include = FALSE, eval = FALSE}
trackdown_auth_configure(path = "/Users/nikitoshina/Documents/documents/trackdown.json")
```

After setting everything up, you can upload your file to Google Docs using `upload_file("your_file.qmd")` and share it with collaborators. If you need to make last-minute changes, use `update_file("your_file.qmd")` to update the Google Doc, beware it will overwrite the document. When the review process is complete, execute `trackdown:download_file()`, and the changes will be automatically integrated.

:::{.callout-note}

Save the file before uploading and updating!

:::

When you're ready to add code for figures, tables, or analysis results, avoid doing so in Google Docs. Instead, first download the document. Ensure all changes made by collaborators in Google Docs are accepted (or rejected) before downloading. To accept all changes at once, use "Tools > Review suggested edits > Accept all". Then, download the edited document from Google Drive using `download_file(file = "your_file.qmd")`. Once you are done implementing the changes you can again use `update_file("your_file.qmd")` to update the file in Google Drive. One handy trick is to use `render_file(file = "your_file.qmd")` to both download and render file. You can accept all the changes run `render_file()` and check whether the file renders correctly and undo all the changes in the google doc to selectively accept the changes.

While collaborating on .qmd documents, use Google Docs for narrative text and Git for code. Avoid writing or editing code in Google Docs, as it's prone to errors. Write code in an IDE like RStudio instead. When using `trackdown` remember that formatting done in google docs will be lost. Use proper Markdown or LaTeX syntax for formatting.

The workflow is iterative, with the document being uploaded/updated on Google Drive for narrative text editing and downloaded locally for code writing with Git. Note that simultaneous collaboration on narrative text and code is not possible with `trackdown`, as changes in both versions cannot be automatically merged. Structuring the workflow sequentially ensures a smooth experience. When adopting such workflow, limit the use of R code in the R Markdown file and separate code into different files to prevent interference between code and narrative text. This way you will have to separate system for working on code and narrative avoiding the clash.

For more information on the package have a look at the vignettes and visit its GitHub page <https://quarto.org/>.

https://docs.google.com/document/d/1vieKJe0na6sDeIu2XWBfE38LlGFswUNRkX7arRSa4Is/edit?usp=sharing

https://docs.google.com/document/d/1GWGlcXW6hUT6l7IW-ttNcUbMq97xQLcMkZ9LyEMPSLM/edit?usp=sharing


