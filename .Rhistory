scatter_1 <- iris %>% drop_na() %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(show.legend = F) +
geom_dl(aes(label = Species), method = "smart.grid") +
theme_minimal() +
labs(x = "Sepal Length", y = "Sepal Width")
scatter_2 <- scatter_1 + geom_smooth(se = F, fullrange = F, show.legend = F, method = "lm", linewidth = 2) + theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
scatter_1 + scatter_2
sp500 <- tribble(
~Year, ~Average_Closing_Price, ~Year_Open, ~Year_High, ~Year_Low, ~Year_Close, ~Annual_Percent_Change,
2023, 4020.94, 3824.14, 4179.76, 3808.10, 3970.04, 3.40,
2022, 4097.49, 4796.56, 4796.56, 3577.03, 3839.50, -19.44,
2021, 4273.41, 3700.65, 4793.06, 3700.65, 4766.18, 26.89,
2020, 3217.86, 3257.85, 3756.07, 2237.40, 3756.07, 16.26,
2019, 2913.36, 2510.03, 3240.02, 2447.89, 3230.78, 28.88,
2018, 2746.21, 2695.81, 2930.75, 2351.10, 2506.85, -6.24,
2017, 2449.08, 2257.83, 2690.16, 2257.83, 2673.61, 19.42,
2016, 2094.65, 2012.66, 2271.72, 1829.08, 2238.83, 9.54,
2015, 2061.07, 2058.20, 2130.82, 1867.61, 2043.94, -0.73,
2014, 1931.38, 1831.98, 2090.57, 1741.89, 2058.90, 11.39,
2013, 1643.80, 1462.42, 1848.36, 1457.15, 1848.36, 29.60,
2012, 1379.61, 1277.06, 1465.77, 1277.06, 1426.19, 13.41,
2011, 1267.64, 1271.87, 1363.61, 1099.23, 1257.60, 0.00,
2010, 1139.97, 1132.99, 1259.78, 1022.58, 1257.64, 12.78,
2009, 948.05, 931.80, 1127.78, 676.53, 1115.10, 23.45,
2008, 1220.04, 1447.16, 1447.16, 752.44, 903.25, -38.49,
2007, 1477.18, 1416.60, 1565.15, 1374.12, 1468.36, 3.53,
2006, 1310.46, 1268.80, 1427.09, 1223.69, 1418.30, 13.62)
sp500_scatter <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_point(size = 2) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_line <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_line(aes(linetype = year_close),linewidth = 1.5) +
scale_color_manual(values = c("steelblue", "grey", "grey")) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_scatter + sp500_line
sp500_scatter <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_point(size = 2) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_line <- sp500 %>%
select(-c(Average_Closing_Price,Year_Open,Annual_Percent_Change)) %>% pivot_longer(-Year) %>% mutate(year_close = name != "Year_Close") %>%
ggplot(aes(x = Year, y = log(value), color = name)) +
geom_line(aes(linetype = year_close),linewidth = 1.5) +
scale_color_manual(values = c("steelblue", "grey", "grey")) +
geom_dl(aes(label = name), method = "smart.grid") +
theme_minimal() +
theme(legend.position = "none") +
labs(x = element_blank(), y = "log S&P 500")
sp500_scatter + sp500_line
waterfall_data <- tribble(
~year, ~bank, ~change,
2017, 2000, 2000,
2018, 1745, -255,
2019, 1930, 185,
2020, 2197, 267,
2021, 2453, 256,
2022, 2300, -153,
) %>% transmute(as.character(year), change)
library(waterfalls)
waterfall(waterfall_data,  calc_total = TRUE,
total_rect_color = "orange",
total_rect_text_color = "white") +
theme_minimal() +
theme(panel.grid = element_blank()) +
labs(y = "Money in Bank", x = NULL)
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
# install.packages("qualtRics")
library("tidyverse")
library("qualtRics")
library("scales")
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
survey_data <- survey_data %>% janitor::clean_names()
graph_data <- survey_data %>%select(gender, offer,  decision_81, participant_id, participant_role) %>%
mutate(participant_role = recode(participant_role,"A" = "dictator", "B" = "recipient" ),
decision = recode(decision_81, "1" = "Accepted", "2" = "Declined")) %>%
mutate(interval = cut_width(offer, width = 10, center = 45)) %>%
filter(participant_role == "recipient") %>% count(decision, interval)
graph_data %>%
ggplot(aes(x = interval, y = n, fill = as.factor(decision))) +
geom_col(position = position_stack()) +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(count(graph_data, interval)$n))) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = "Offer size", y = "Count", title = "Results of the Ultimatum Game", fill = "Result")
max(count(graph_data, interval)$n
max(count(graph_data, interval)$n)
graph_data
count(graph_data, interval)
survey_data <- fetch_survey(surveyID = "SV_bJIs8lwz4CfAAgS",
verbose = TRUE,force_request = TRUE)
survey_data <- survey_data %>% janitor::clean_names()
graph_data <- survey_data %>%select(gender, offer,  decision_81, participant_id, participant_role) %>%
mutate(participant_role = recode(participant_role,"A" = "dictator", "B" = "recipient" ),
decision = recode(decision_81, "1" = "Accepted", "2" = "Declined")) %>%
mutate(interval = cut_width(offer, width = 10, center = 45)) %>%
filter(participant_role == "recipient") %>% count(decision, interval)
graph_data %>%
ggplot(aes(x = interval, y = n, fill = as.factor(decision))) +
geom_col(position = position_stack()) +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(graph_data$n))) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = "Offer size", y = "Count", title = "Results of the Ultimatum Game", fill = "Result")
pizza_table <- survey_data[c(22:29,72)] %>% select(-pizzas_6) %>% pivot_longer(-participant_id) %>% count(value) %>% drop_na()
pizza_table %>% ggplot(aes(x = fct_reorder(value, n), y = n)) +
geom_col(fill = "steelblue") +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(pizza_table$n))) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = "Pizza", y = "Count", title = "What Pizzas do you like?") +
coord_flip()
pizza_table <- survey_data[c(22:29,72)] %>% select(-pizzas_6) %>% pivot_longer(-participant_id) %>% count(value) %>% drop_na()
pizza_table %>% ggplot(aes(x = fct_reorder(value, n), y = n)) +
geom_col(fill = "steelblue") +
theme_minimal(base_size = 20) +
scale_y_continuous(breaks = scales::breaks_extended(n = max(pizza_table$n))) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.position = "top") +
labs(x = NULL, y = "Count", title = "What Pizzas do you like?") +
coord_flip()
#|code-fold: true
#|code-summary: "Show the code"
datasauRus::datasaurus_dozen %>% filter(dataset %in% c("away","dino", "star")) %>%
mutate(dataset = str_to_upper(dataset)) %>%
ggplot(aes(x = x, y = y, colour = dataset)) +
geom_point() +
theme_void(base_size = 18) +
theme(legend.position = "none",
strip.text = element_text(face = "bold")) +
facet_wrap(~dataset, ncol = 3) +
coord_fixed(ratio = 0.8)
tibble(
x = list(1, 2:3, 4:6,7:11)
) %>% mutate(length = lengths(x))
?lengths
x <- 2^0.5
x^x
x^x^x
sq_vector <- x
for(i in 100){y <- sq_vector[i]
sq_vector <- c(sq_vector,x^y)}
sq_vector
sq_vector <- x
sq_vector <- x
sq_vector
sq_vector <- x
for(i in 100){
y <- sq_vector[i]
sq_vector <- c(sq_vector,x^y)
}
sq_vector
sq_vector <- x
sq_vector[1]
sq_vector <- x
for(i in 100){
y <- sqrt(x)^sq_vector[i]
sq_vector <- c(sq_vector,y)
}
sq_vector
sq_vector <- x
sq_vector <- x
for(i in 100){
y <- sqrt(2)^sq_vector[i]
sq_vector <- c(sq_vector,y)
}
sq_vector
sq_vector <- x
sqrt(2)^sq_vector[i]
sq_vector[i]
sqrt(2)^sq_vector[1]
print(i)
sq_vector <- x
for(i in 1:100){
print(i)
y <- sqrt(2)^sq_vector[i]
sq_vector <- c(sq_vector,y)
}
sq_vector
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Cars"
#|   - "Pressure"
#| layout-ncol: 2
plot(cars)
plot(pressure)
cars
data()
uspop
volcano
women
AirPassengers
Nile
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Cars"
#|   - "Pressure"
#| layout-ncol: 2
plot(nile)
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Cars"
#|   - "Pressure"
#| layout-ncol: 2
plot(Nile)
plot(women)
Orange
AirPassengers
treering
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Nile"
#|   - "Pressure"
#| layout-ncol: 2
plot(Nile)
plot(treering)
presidents
uspop
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Nile"
#|   - "Pressure"
#| layout-ncol: 2
plot(Nile)
plot(uspop)
sunspot.year
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Nile"
#|   - "US Population"
#| layout-ncol: 2
plot(sunspot.year)
plot(uspop)
sleep
plot(sleep)
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Sunspot"
#|   - "US Population"
#| layout-ncol: 2
plot(sunspot.year)
plot(uspop)
#| label: fig-charts
#| fig-cap: Charts
#| fig-subcap:
#|   - "Sunspot"
#|   - "US Population"
#| layout-ncol: 2
plot(sunspot.year)
plot(uspop)
#| label: fig-plots
#| fig-cap: Plots
#| fig-subcap:
#|   - "Sunspot"
#|   - "US Population"
#| layout-ncol: 2
qplot(sunspot.year)
#| label: fig-plots
#| fig-cap: Plots
#| fig-subcap:
#|   - "Sunspot"
#|   - "US Population"
#| layout-ncol: 2
ggplot2::qplot(sunspot.year)
plot(uspop)
#| label: fig-plots
#| fig-cap: Plots
#| fig-subcap:
#|   - "Sunspot"
#|   - "US Population"
#| layout-ncol: 2
plot(sunspot.year)
plot(uspop)
#| label: fig-plots
#| fig-cap: Plots
#| fig-subcap:
#|   - "Sunspot"
#|   - "US Population"
#| layout-ncol: 2
#| code-fold: show
#| code-summary: "Collapse Code"
plot(sunspot.year)
plot(uspop)
?bbt_update_bib()
library(rbbt)
?bbt_update_bib()
data_raven_accident <- data_raven %>% select(id, mean_temp_celsius, ch_tournament) %>% pivot_longer(-id)
library(tidyverse)
data_raven_accident <- data_raven %>% select(id, mean_temp_celsius, ch_tournament) %>% pivot_longer(-id)
data_raven_accident <- data_raven %>% select(id, mean_temp_celsius, ch_tournament) %>% pivot_longer(-id)
data_raven_accident %>% head(n=5)
data_raven_accident %>% pivot_wider(names_from = name, values_from = value) %>% head(n = 5)
data_raven %>%
pivot_longer(c(pr_correct, tr_correct, ch_correct), names_to = "game", values_to = "n_correct") %>%
select(id,game,n_correct) %>%
head(n = 5)
data_raven
data_raven %>% select(id,gender,pr_correct) %>% unite(c(gender,pr_correct),sep = "/")
data_raven %>% select(id,gender,pr_correct) %>% unite(c(gender,pr_correct),sep = ".")
?unite
data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct)",c(gender,pr_correct),sep = ".")
data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct)",c(gender,pr_correct),sep = "/")
data_raven
data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), sessio_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9))
data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), sessio_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(id) %>% relocate(gender, .after = T)
data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), sessio_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(id) %>% relocate(gender, .after = subject_n)
data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), sessio_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
?separate
data_raven_sep %>% separate(col = `gender/pr_correct`, sep = "/")
data_raven_sep <- data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct)",c(gender,pr_correct),sep = "/")
data_raven_uni <- data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), sessio_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
data_raven_sep %>% separate(col = `gender/pr_correct`, sep = "/")
data_raven_sep %>% separate(col = "gender/pr_correct", sep = "/")
data_raven_sep %>% head(n=5)
data_raven_sep %>% separate(col = "gender/pr_correct", sep = "/")
data_raven_sep <- data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct",c(gender,pr_correct),sep = "/")
data_raven_uni <- data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), sessio_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
data_raven_sep %>% separate(col = "gender/pr_correct", sep = "/")
data_raven_sep %>% separate(col = "gender/pr_correct", into = c("gender","pr_correct") sep = "/")
data_raven_sep %>% separate(col = "gender/pr_correct", into = c("gender","pr_correct"), sep = "/")
data_raven_sep %>% separate(col = "gender/pr_correct", into = c("gender","pr_correct"), sep = "/") %>% head(n=5)
data_raven_uni %>% head(n=5)
data_raven_uni %>% unite(c(site_id, session_n, subject_n),col = "id", sep = "")
data_raven_sep <- data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct",c(gender,pr_correct),sep = "/")
data_raven_uni <- data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), session_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
data_raven_uni %>% unite(c(site_id, session_n, subject_n),col = "id", sep = "")
data_raven_uni %>% unite(c(site_id, session_n, subject_n),col = "id", sep = "") %>% head(n = 5)
data_raven_sep <- data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct",c(gender,pr_correct),sep = "/")
data_raven_uni <- data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), session_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
data_raven_sep %>% head(n=5)
data_raven
data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct",c(gender,pr_correct),sep = "/")
data_raven %>% select(id,gender,pr_correct) %>% unite("gender/pr_correct",c(gender,pr_correct),sep = "/") %>% separate(col = "gender/pr_correct", into = c("gender","pr_correct"), sep = "/") %>% head(n=5)
data_raven_uni <- data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), session_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), session_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n)
data_raven %>% select(id,gender) %>% mutate(site_id = str_sub(id,start = 1, end = 3), session_n = str_sub(id,start = 4, end = 6), subject_n = str_sub(id,start = 7, end = 9)) %>% select(-id) %>% relocate(gender, .after = subject_n) %>% unite(c(site_id, session_n, subject_n),col = "id", sep = "") %>% head(n = 5)
# | layout-ncol: 2
print(employees)
library(dplyr)
employees <- data.frame(
employee_id = c(1, 2, 3, 4, 5),
name = c("John", "Jane", "Bob", "Alice", "Tom")
)
projects <- data.frame(
project_id = c(1, 2, 3, 4, 5),
employee_id = c(1, 2, 3, 1, 4)
)
# | layout-ncol: 2
print(employees)
print(projects)
inner_join_result <- employees %>%
inner_join(projects, by = "employee_id")
print(inner_join_result)
inner_join_result <- employees %>%
inner_join(projects, by = "employee_id")
print(inner_join_result)
left_join_result <- employees %>%
left_join(projects, by = "employee_id")
print(left_join_result)
right_join_result <- employees %>%
right_join(projects, by = "employee_id")
print(right_join_result)
library(dplyr)
employees <- data.frame(
employee_id = c(1, 2, 3, 4, 5),
name = c("John", "Jane", "Bob", "Alice", "Tom")
)
projects <- data.frame(
project_id = c(1, 2, 3, 4, 5, 6),
employee_id = c(1, 2, 3, 1, 4, NA)
)
# | layout-ncol: 2
print(employees)
print(projects)
left_join_result <- employees %>%
left_join(projects, by = "employee_id")
print(left_join_result)
right_join_result <- employees %>%
right_join(projects, by = "employee_id")
print(right_join_result)
library(dplyr)
employees <- data.frame(
employee_id = c(1, 2, 3, 4, 5),
name = c("John", "Jane", "Bob", "Alice", "Tom")
)
projects <- data.frame(
project_id = c(1, 2, 3, 4, 5, 6),
employee_id = c(1, 2, 3, 1, 4, 6)
)
right_join_result <- employees %>%
right_join(projects, by = "employee_id")
print(right_join_result)
anti_join_result <- employees %>%
anti_join(projects, by = "employee_id")
print(anti_join_result)
semi_join_result <- employees %>%
semi_join(projects, by = "employee_id")
print(semi_join_result)
vignette("trackdown-workflow")
install.packages(trackdown)
install.packages("trackdown")
trackdown::upload_file()
trackdown::upload_file(collaboration.qmd)
trackdown::upload_file("collaboration.qmd")
library(trackdown)
remotes::install_github("claudiozandonella/trackdown",
build_vignettes = TRUE)
trackdown::upload_file("collaboration.qmd")
library(trackdown)
library(trackdown)
detach("packagedetach("package:trackdown", unload=TRUE):vegan", unload=TRUE)
detach("package:trackdown", unload=TRUE)
library(trackdown)
version
package_version(trackdown)
package_version("trackdown")
packageVersion("trackdown")
library("trackdown")
library(trackdown)
upload_file("collaboration.qmd")
trackdown_auth_configure(path = "/Users/nikitoshina/Documents/documents/trackdown.json")
upload_file("collaboration.qmd")
vignette("trackdown-workflow")
update_file("collaboration.qmd")
dowload_file("collaboration.qmd")
download_file("collaboration.qmd")
file_update("collaboration.qmd")
update_file("collaboration.qmd")
update_file("collaboration.qmd")
download_file("collaboration.qmd")
View(base_dist)
View(base_dist)
View(base)
trackdown::upload_file("repres.qmd")
trackdown_auth_configure(path = "/Users/nikitoshina/Documents/documents/trackdown.json")
library(trackdown)
trackdown_auth_configure(path = "/Users/nikitoshina/Documents/documents/trackdown.json")
trackdown::upload_file("repres.qmd")
trackdown::upload_file("litreview.qmd")
trackdown::upload_file("write.qmd")
trackdown::download_file("write.qmd")
library(trackdown)
trackdown_auth_configure(path = "/Users/nikitoshina/Documents/documents/trackdown.json")
trackdown::download_file("write.qmd")
trackdown_auth_configure(path = "/Users/nikitoshina/Documents/documents/trackdown.json")
p3 <- continents %>%
filter(continent %in% c("Asia","Europe")) %>%
ggplot(aes(x=year, y = total_pop_mil, color = continent)) +
geom_line(linewidth = 1.5) +
theme_minimal() +
theme(legend.position = "none") +
scale_y_log10() +
scale_color_manual(values = c("#DA70D6", "#70DA74")) +
geom_dl(aes(label = continent), method = "smart.grid") +
labs(x = element_blank(), y = "Population in Millions (log10)")
knitr::opts_chunk$set(echo = T, warning = F, message = F, error = F)
library("tidyverse")
library("gapminder")
# devtools::install_github("https://github.com/cran/colortools")
library("colortools")
library("patchwork")
library("gridGraphics")
library("grid")
library("ggplotify")
library("directlabels")
p4 <- continents %>%
filter(continent %in% c("Asia","Europe")) %>%
ggplot(aes(x=year, y = total_pop_mil, color = continent)) +
geom_line(size = 1.5) +
theme_minimal() +
theme(legend.position = "none") +
scale_y_log10() +
scale_color_manual(values = c("#DA70D6", "#70D6DA"))  +
geom_dl(aes(label = continent), method = "smart.grid") +
labs(x = element_blank(), y = "Population in Millions (log10)")
triadic + p4 + plot_annotation(title = "Near Complementary Harmony for Highlighting \nTwo Series Where One Is the Primary Focus",theme = theme(plot.title = element_text(size = 16)))
git global
