theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y <= 2, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(0,6)) +
ylim(c(0,6))
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y <= 2, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = F) +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y <= 2, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = F, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y <= 2, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
mutate(shape = ifelse(x > 2 & x <5, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
mutate(shape = ifelse(x > 2 & x <5, T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x > 3 & x <4, T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x > 3 & x <4, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x > 2 & x <4, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x >= 2 & x <4, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x >= 1 & x <4, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x >= 1 & x <3, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x >= 1 & x <=2, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
mutate(shape = ifelse(runif(nrow(),0,1), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
mutate(shape = ifelse(runif(6,0,1), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
mutate(shape = ifelse(sample(0:1,size = nrow(),replace = TRUE), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y > 2 & y <5, T,F)) %>%
mutate(shape = ifelse(sample(0:1,size = nrow(.),replace = TRUE), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y <= 2, T,F)) %>%
mutate(shape = ifelse(sample(0:1,size = nrow(.),replace = TRUE), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(shape = ifelse(x >=4 2, T,F)) %>%
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(shape = ifelse(x >= 4, T,F)) %>%
mutate(color = ifelse(sample(0:1,size = nrow(.),replace = TRUE), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(shape = ifelse(x >= 5, T,F)) %>%
mutate(color = ifelse(sample(0:1,size = nrow(.),replace = TRUE), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(x >= 1 & x <=2, T,F)) %>%
ggplot(aes(x,y, color = color)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
complete(tibble(x = 1:6, y = 1:6), x, y) %>%
mutate(color = ifelse(y <= 2, T,F)) %>%
mutate(shape = ifelse(sample(0:1,size = nrow(.),replace = TRUE), T,F)) %>%
ggplot(aes(x,y, color = color, shape = shape)) +
geom_point(size = 4, show.legend = F) +
xlim(c(1,6)) +
ylim(c(1,6)) +
coord_fixed(ratio = 1, expand = T, clip = "off") +
theme_void()
library("tidyverse")
knitr::opts_chunk$set(echo = T, warning = F, message = F, error = F)
# A "#" is used to annotate comments!
2 + 2
2 * 4
2^8
(1 + 3) / (3 + 5)
log(10) # Calculates the natural log of 10!
x <- 2 # Equivalent to x = 2
x * 4
x
x <- x * 5
x
class(x)
(name <- "Parsa Rahimi") # <1>
class(name)
(true_or_false <- TRUE)
class(true_or_false)
(name_surname <- c("Parsa", "Rahimi"))
length(name)
length(name_surname)
(i <- c(1, 2, 3, 4))
i + 10 # <1>
i * 10 # <2>
i + c(2, 4, 6, 8) # <3>
name
name <- i + c(5, 4, 2, 1)
name
name_surname + 2
str(name_surname)
library(tidyverse)
data <- readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") # <1>
#| classes: output
data %>% glimpse()
data_raven <- data %>% select(id, mean_temp_celsius, gender, pr_correct, tr_correct, ch_tournament, ch_correct)
head(data_raven)
data_raven %>%
select(-gender) %>%
head()
data_male <- data_raven %>% filter(gender == "Male")
data_female <- data_raven %>% filter(gender == "Female")
head(data_male)
head(data_female)
data_raven %>%
filter(
(gender == "Male" & mean_temp_celsius > 30) | (gender == "Female" & mean_temp_celsius < 30)
)
data_raven %>%
arrange(pr_correct) %>%
head()
data_raven %>%
arrange(desc(pr_correct)) %>%
head()
#| classes: output
tibble(rows = 1:10) %>% mutate(
One = 1,
Comment = "Something",
Approved = TRUE
)
data_raven %>% mutate(
mean_temp_fahrenheit = (mean_temp_celsius * 9 / 5) + 32,
impovement = tr_correct - pr_correct,
pr_deviation = pr_correct - mean(pr_correct)
)
data_raven <- data_raven %>% mutate(gender = recode(gender, "Male" = "M", "Female" = "F"))
data_raven %>%
summarize(
perc_male = sum(gender == "Male", na.rm = T) / n(),
pr_median = median(pr_correct),
tr_max = max(tr_correct),
ch_ratio = sum(ch_tournament) / n(),
ch_mean = mean(ch_correct)
)
data_raven %>%
drop_na(gender) %>%
group_by(gender) %>%
summarize(
pr_mean = mean(pr_correct),
tr_mean = mean(tr_correct),
ch_mean = mean(ch_correct),
pr_sd = sd(pr_correct),
n = n()
) %>%
ungroup()
data_raven %>%
drop_na(gender) %>%
group_by(gender, ch_tournament) %>%
summarize(
ch_mean = mean(ch_correct),
pr_sd = sd(ch_correct),
n = n()
) %>%
ungroup()
data_raven %>%
drop_na(gender) %>%
group_by(gender) %>%
mutate(n = n()) %>%
mutate(mean_male = mean(gender == "Male")) %>%
ungroup() %>%
select(id, gender, n, mean_male) %>%
head(n = 5)
data_raven %>%
drop_na(gender) %>%
group_by(gender) %>%
mutate(n = n()) %>%
ungroup() %>%
mutate(mean_male = mean(gender == "Male")) %>%
select(id, gender, n, mean_male) %>%
head(n = 5)
#| echo: false
data_raven %>%
drop_na(gender) %>%
mutate(n = n(), .by = gender) # <1>
df <- tibble(
x = list(1, 2:3, 4:6, 7:11)
)
df %>% mutate(length = length(x))
df %>%
rowwise() %>%
mutate(length = length(x))
data_raven %>% count(gender)
data_raven %>% count(gender, ch_tournament)
data_raven %>%
rename(subject_id = id, sex = gender) %>%
head(5)
data_raven %>%
select(-id) %>%
mutate(id = row_number()) %>%
relocate(id) %>%
head(5)
library(skimr)
skim(data_raven)
library(lubridate)
day_year_month <- "31/2001/01"
(date <- dym(day_year_month))
month_day_year_hour_minute <- "Jan 31st 2001 6:05PM"
(date_time <- mdy_hm(month_day_year_hour_minute))
sentence_with_date <- "Elizabeth II was Queen of the United Kingdom and other Commonwealth realms from 6 February 1952."
dmy(sentence_with_date) # <1>
day(date_time)
hour(date_time)
month(date_time, label = TRUE, abbr = FALSE) # <1>
styler:::style_active_file()
library("tidyverse")
knitr::opts_chunk$set(echo = T, warning = F, message = F, error = F)
# A "#" is used to annotate comments!
2 + 2
2 * 4
2^8
(1 + 3) / (3 + 5)
log(10) # Calculates the natural log of 10!
x <- 2 # Equivalent to x = 2
x * 4
x
x <- x * 5
x
class(x)
(name <- "Parsa Rahimi") # <1>
class(name)
(true_or_false <- TRUE)
class(true_or_false)
(name_surname <- c("Parsa", "Rahimi"))
length(name)
length(name_surname)
(i <- c(1, 2, 3, 4))
i + 10 # <1>
i * 10 # <2>
i + c(2, 4, 6, 8) # <3>
name
name <- i + c(5, 4, 2, 1)
name
name_surname + 2
str(name_surname)
library(tidyverse)
data <- readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") # <1>
#| classes: output
data %>% glimpse()
data_raven <- data %>% select(id, mean_temp_celsius, gender, pr_correct, tr_correct, ch_tournament, ch_correct)
head(data_raven)
data_raven %>%
select(-gender) %>%
head()
data_male <- data_raven %>% filter(gender == "Male")
data_female <- data_raven %>% filter(gender == "Female")
head(data_male)
head(data_female)
data_raven %>%
filter(
(gender == "Male" & mean_temp_celsius > 30) | (gender == "Female" & mean_temp_celsius < 30)
) %>%
head()
data_raven %>%
arrange(pr_correct) %>%
head()
data_raven %>%
arrange(desc(pr_correct)) %>%
head()
#| classes: output
tibble(rows = 1:10) %>% mutate(
One = 1,
Comment = "Something",
Approved = TRUE
)
data_raven %>% mutate(
mean_temp_fahrenheit = (mean_temp_celsius * 9 / 5) + 32,
impovement = tr_correct - pr_correct,
pr_deviation = pr_correct - mean(pr_correct)
)
data_raven <- data_raven %>% mutate(gender = recode(gender, "Male" = "M", "Female" = "F"))
data_raven %>%
summarize(
perc_male = sum(gender == "Male", na.rm = T) / n(),
pr_median = median(pr_correct),
tr_max = max(tr_correct),
ch_ratio = sum(ch_tournament) / n(),
ch_mean = mean(ch_correct)
)
data_raven %>%
drop_na(gender) %>%
group_by(gender) %>%
summarize(
pr_mean = mean(pr_correct),
tr_mean = mean(tr_correct),
ch_mean = mean(ch_correct),
pr_sd = sd(pr_correct),
n = n()
) %>%
ungroup()
data_raven %>%
drop_na(gender) %>%
group_by(gender, ch_tournament) %>%
summarize(
ch_mean = mean(ch_correct),
pr_sd = sd(ch_correct),
n = n()
) %>%
ungroup()
data_raven %>%
drop_na(gender) %>%
group_by(gender) %>%
mutate(n = n()) %>%
mutate(mean_male = mean(gender == "Male")) %>%
ungroup() %>%
select(id, gender, n, mean_male) %>%
head(n = 5)
data_raven %>%
drop_na(gender) %>%
group_by(gender) %>%
mutate(n = n()) %>%
ungroup() %>%
mutate(mean_male = mean(gender == "Male")) %>%
select(id, gender, n, mean_male) %>%
head(n = 5)
#| echo: false
data_raven %>%
drop_na(gender) %>%
mutate(n = n(), .by = gender) # <1>
df <- tibble(
x = list(1, 2:3, 4:6, 7:11)
)
df %>% mutate(length = length(x))
df %>%
rowwise() %>%
mutate(length = length(x))
data_raven %>% count(gender)
data_raven %>% count(gender, ch_tournament)
data_raven %>%
rename(subject_id = id, sex = gender) %>%
head(5)
data_raven %>%
select(-id) %>%
mutate(id = row_number()) %>%
relocate(id) %>%
head(5)
library(skimr)
skim(data_raven)
library(lubridate)
day_year_month <- "31/2001/01"
(date <- dym(day_year_month))
month_day_year_hour_minute <- "Jan 31st 2001 6:05PM"
(date_time <- mdy_hm(month_day_year_hour_minute))
sentence_with_date <- "Elizabeth II was Queen of the United Kingdom and other Commonwealth realms from 6 February 1952."
dmy(sentence_with_date) # <1>
day(date_time)
hour(date_time)
month(date_time, label = TRUE, abbr = FALSE) # <1>
name_surname + 2
str(name_surname)
name_surname + 2
str(name_surname)
## Downloading Data
If you're accustomed to Base R (i.e., functions that come with R upon installation), you may be aware of `read.csv()`. However, `readr`, a part of the Tidyverse package, offers functions that address common issues associated with Base R's reading functions. `read_csv` not only loads data 10 times faster than `read.csv`, but it also produces a tibble instead of a data frame and evades inconsistencies of `read.csv`. You might be asking, "What exactly is a tibble?" A tibble is a special type of data frame with several advantages, such as faster loading times, maintaining input types, permitting columns as lists, allowing non-standard variable names, and never creating row names.
To load your data, you first need to know the path to your data. You can find your file, check its location, and then copy and paste it. If you are a Windows user, your path might contain "\\", which is an escape character. To rectify this, replace "\\" with "/". Copying the path gives you the absolute path (e.g., `"/Users/User/Documents/your_project/data/file.csv"`), but you can also use a local path from the folder of the project (e.g., `"/data/file.csv"`). Let's read the data! Using `readr::` specifies which package to use. Replace the text between the quotes with your path.
### Example Data
In this tutorial, I'll be using a sample from the Climate and Cooperation Experiment conducted in Mexico. During the experiment, subjects were asked to complete three series of Raven's matrices, four dictator games, and a single lottery game. Sessions below 30 Celsius were labeled as control, and sessions above 30 Celsius were labeled as treatment. We will primarily be using results from the Raven's matrices games, which consist of 3 sets of 12 matrices. The first set, `pr_`, is the piece-rate round where participants received points for each correctly solved matrix. The second set, `tr_`, is the tournament round where participants competed against a random opponent. The winner received double points, and the loser received nothing. The third set, `ch_`, is the choice round where participants chose whether they wanted to play the piece-rate or tournament round against a different opponent's score from the tournament round.
The data can be found in the `data` directory of the GitHub repository. We'll need the `tidyverse` package.
```{r}
library(tidyverse)
library(tidyverse)
```{r cache = TRUE}
data <- readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") # <1>
data <- readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") # <1>
```{r cache = TRUE}
To get a glimpse of the data, we can use the `glimpse()` function, which will provide us with a sample and the type of the column. Another common method is to use `head()` to get a slice of the top rows or `tail()` to get a slice of the bottom rows. To view the entire data set, use `View()`.
```{r}
#| classes: output
data %>% glimpse()
#| classes: output
data %>% glimpse()
## Basic Data Management With `dplyr`
`dplyr` uses a collection of verbs to manipulate data that are piped (chained) into each other with a piping operator `%>%` from `magrittr` package. The way you use functions in base R is you wrap new function over the previous one, such as `k(g(f(x)))` this will become impossible to read very quickly as you stack up functions and their arguments. To solve this we will use pipes `x %>% f() %>% g() %>% k()`! Now you can clearly see that we take `x` and apply `f()`, then `g()`, then `k()`. Note: base R now also has its own pipe `|>`, but we will stick to `%>%` for compatibility across packages.
data <- readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") # <1>
write_csv(data %>% select(id, mean_temp_celsius, gender, pr_correct, tr_correct, ch_tournament, ch_correct), "experiment_data.csv")
write_csv(data %>% select(id, mean_temp_celsius, gender, pr_correct, tr_correct, ch_tournament, ch_correct), "data/experiment_data.csv")
readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") %>% select(id, date, mean_temp_celsius, gender, pr_correct, tr_correct, ch_tournament, start_time, end_time, ch_correct)
readr::read_csv("https://raw.githubusercontent.com/nikitoshina/ECON-623-Lab-2023/main/data/mexico_sample_data.csv?token=GHSAT0AAAAAAB5WTPULI26TZP545VNUFQE6Y6O4XVA") %>% select(id, date, mean_temp_celsius, gender, pr_correct, tr_correct, ch_tournament, start_time, end_time, ch_correct) %>% write_csv(.,"data/experiment_data.csv")
styler:::style_active_file()
