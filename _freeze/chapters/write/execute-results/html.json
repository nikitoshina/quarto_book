{
  "hash": "72efb7bb4164f3b922a38079fc02d3b8",
  "result": {
    "markdown": "---\ntitle: \"Write\"\n---\n\n## WYSIWYG\n\nWYSIWYG (What You See Is What You Get) editors are programs that allow you to make and edit content visually without having to know how to code. This means that you can see how your content will look as you're creating it. They're very helpful for people who don't have experience with coding or markup languages. Examples of WYSIWYG editors that you may already be familiar with include Google Docs and Microsoft Word. Learning how to navigate these widely used tools will teach you valuable skills such as formatting and writing. Plus, after using them for a while, you'll start to appreciate the simplicity and efficiency of markup languages.\n\nI strongly recommend that you develop expertise in these tools, as the skills you acquire are highly transferable to other similar editors. Additionally, it's a valuable investment as your colleagues are likely to use them as well. To get started, I suggest checking out the MOS Certification Series on LinkedIn Learning. These tutorials are designed for those preparing to take MOS exams and cover a broad range of functionality in Word, Excel, and PowerPoint. Even if you don't plan on taking the exams, I highly encourage you to watch the tutorials. They're a great resource for building your skills and improving your proficiency with these essential tools!\n\n[Here is the link!](https://www.linkedin.com/learning-login/share?account=2204681&forceAccount=false&redirect=https%3A%2F%2Fwww.linkedin.com%2Flearning%2Fcert-prep-word-associate-microsoft-office-specialist-for-office-2019%3Ftrk%3Dshare_ent_url%26shareId%3DSTM%252FLOpvQwOb0jWc9D%252FabQ%253D%253D)\n\n## Markup Languages\n\nMarkup languages are sets of codes that provide structure and formatting to documents, such as web pages, eBooks, and scientific papers. Unlike WYSIWYG editors, which allow users to create content visually, markup languages require the use of specific tags or codes to indicate how the content should be displayed. These tags define the document structure, formatting, and other attributes. Some of the most commonly used markup languages include HTML, LaTeX, and Markdown. By learning a markup language, you will have greater control over the appearance and functionality of your digital documents. Additionally, markup languages can help you focus more on writing, allowing templates to handle all the formatting. I promise after you switch, there is no coming back! Your assignments and web pages will look beautiful every time.\n\n### HTML\n\nWhen you hear markup language, you might think of Hypertext Markup Language (HTML), which is used everywhere on the web to build structure and content. HTML uses tags to describe how to display content in a browser. For instance, `<br>` will create a line break, `<img>` will add an image and so on. HTML is an essential component of web development, and learning how to use HTML is the first step towards customizing your own web pages and web applications. It is also often used in manipulating text in your graphs.\n\n### LaTeX\n\nHave you ever wondered why academic papers look so beautiful or why every textbook looks the same? They are all written in LaTeX, a typesetting system used for academic and scientific publishing. It is a markup language that enables precise formatting of complex technical documents. It is also famous for beautiful mathematical equations. With LaTeX, users can create professional-looking documents with a high degree of customization and flexibility. It is easy to pick up, but hard to master. You can find many introductory tutorials online. Also, ChatGPT does a great job at helping with LaTeX questions. If you have an equation you want to transfer into LaTeX go to [MathPix](https://mathpix.com/image-to-latex). It lets you convert pictures or screenshots into code.\n\nNow you need to find an editor! The default is to use the online editor [OverLeaf](https://www.overleaf.com/). You can start writing without much headache, perfect! And if you have any questions, refer to their extensive collection of guides.\n\n### Markdown\n\nMarkdown is perfect down to the last-minute detail. It was designed as a lightweight markup language for creating formatted text using a plain-text editor. It appeals to human readers in its source code form in comparison to the complexity and inefficiency of existing markup languages like HTML.\n\nMarkdown is popular among developers, writers, and bloggers due to its simplicity and flexibility. It can also include links, images, and other multimedia elements. Markdown is widely supported and can be used with a variety of tools and platforms, including text editors, note-taking apps, and content management systems. By learning Markdown, you can create well-formatted and easy-to-read content quickly and efficiently without the need for complex formatting tools or specialized software. This book is written entirely in Markdown!\n\nYou can write Markdown in almost any text editor. Nonetheless, I recommend MacDown for Mac and Markdown Pad for Windows, StackEdit for Online, or if you are willing to pay, try Typora.\n\n### Yet Another Markup Language (YAML)\n\nYAML (Yet Another Markup Language) is a human-readable data serialization language often used for configuration files and data exchange. It uses indentation, key-value pairs, and directories and supports different data types. Directories are used to organize data as key-value pairs with indentation to indicate hierarchy. The key represents a unique identifier or name, and the value represents associated data or content. YAML is easy to read and write and is popular in web development and software configuration. In YAML,\n\n::: columns\n::: column\n``` yaml\nbook:\n  title: \"Dead Souls\"\n  author: \"Nikolai Gogol\"\n  date: today\n  chapters:\n    - index.qmd\n    - chapter1.qmd\n  appendix:\n    - appendix1.qmd\n```\n:::\n\n::: column\n``` yaml\n% Key value pairs\ntitle: \"Dead Souls\"\nauthor: \"Nikolai Gogol\"\ndate: today\n\n% Directory/Map  \nchapters:\n  - index.qmd\n  - chapter1.qmd\n```\n:::\n:::\n\n### Pandoc\n\nPandoc (all documents) converts files from one markup format into another. It supports a wide range of formats, including HTML, Markdown, LaTeX, PDF, and Microsoft Word. With Pandoc, users can convert documents from one markup language to another quickly and easily without having to edit or reformat the content manually.\n\nPandoc can be used for a variety of purposes, such as converting a Markdown file to HTML for a web page or converting a LaTeX document to PDF for printing. It can also be used to merge multiple documents into a single file or to extract content from a document in a specific format.\n\nPandoc is highly customizable, with many options and settings available for controlling the output format and appearance of the converted document. It is widely used in academic and scientific publishing, as well as in web development and documentation. By using Pandoc, you can save time and effort by automating the conversion process between different markup formats.\n\nPandoc is a command-line tool, but it can be integrated into some markdown editors. It extends the capabilities of Markdown by adding support for tables, footnotes, citations, and more. For example, this book was written in Markdown and converted into HTML and PDF using Pandoc.\n\n## Quarto\n\nAt this point, you might be wondering, \"why did I have to read about these technologies?\" Because the combination of LaTeX, Markdown, Pandoc, and YAML provides a powerful and flexible set for the creation of documents. Those familiar with Sweave, Rmarkdown, and Jupyter Notebooks will find Quarto to be a similar tool. Quarto builds upon the success of Rmarkdown and Jupyter Notebooks, combining the best features of Markdown with new functionality and eliminating the need for additional packages. It provides attractive default formatting options and easy customization. If you have experience writing in Markdown, Quarto will be a breeze to use.\n\nWhat can it do?\n\n-   Create Reproducible Documents and Reports.\n-   Create Dynamic Content with Python, R, Julia, and Observable.\n-   Create professional-grade content, including articles, reports, presentations, websites, blogs, and books, in a variety of formats such as HTML, PDF, MS Word, ePub, and more.\n-   Author with scientific markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.\n-   Create interactive tutorials and notebooks.\n\n### Installing\n\nTo use Quarto you don't need any special software, if you would like, you can even use a text editor to create your .qmd files and command line to render the document. However, working in IDE will make your life much easier. I prefer to use RStudio, after all, Quarto is a product of Posit (former RStudio), but Visual Studio Code also works well. If you have not installed RStudio nor Visual Studio Code yet, follow @setup.qmd.\n\n#### RStudio\n\nFrom within Rstudio you can install Quarto as you install any other package. Additionally, you should install TinyTeX, a minimal set of packages required to compile LaTeX documents. You can get both by running the following command in R.\n\n\n```{bash}\ninstall.packages(c(\"quarto\", \"tinytex\"))\n```\n\n\n#### Visual Studio Code\n\nInstall the Quarto extension by going to Extensions -\\> search for \"Quarto\" -\\> install. Then run the following command in the terminal if you don't have TinyTeX installed:\n\n\n```{bash}\nquarto install tinytex\n```\n\n\n### Your First Document\n\nWrite Create a Quarto project. Go to top panel -\\> File -\\> New Project -\\> Directory -\\> Quarto Project -\\> Create\n\nFile -\\> Quarto Document -\\> Write the Title of your document -\\> Select the format you want (HTML is the default) -\\> Create\n\nAn (optional) YAML header is demarcated by three dashes (---) on either end. You can learn more about YAML on Quarto's website. There are a lot of useful options for display.\n\n\n```{yaml}\n---\ntitle: \"Title\"\neditor: visual\nformat: pdf\n---\n```\n\n\nIf you prefer the WYSIWYG style, you can switch to the visual editor in the top left corner. Additionally, if you tick \"Render to Save,\" a new document preview will be updated after each save.\n\nNow it is time to get writing! To start, H1 heading can be defined in yaml `title: \"Title\"` and as `# Title`.\n\n+------------------------------+-----------------------------------------------+\n| Markdown Syntax              | Output                                        |\n+==============================+===============================================+\n| \\# Header 1                  | # Chapter {.heading-output}                   |\n+------------------------------+-----------------------------------------------+\n| \\## Header 2                 | ## Section {.heading-output}                  |\n+------------------------------+-----------------------------------------------+\n| \\### Header 3                | ### Subsection {.heading-output}              |\n+------------------------------+-----------------------------------------------+\n| \\#### Header 4               | #### Subsubsection {.heading-output}          |\n+------------------------------+-----------------------------------------------+\n| \\##### Header 5              | ##### Paragraph {.heading-output}             |\n+------------------------------+-----------------------------------------------+\n| \\###### Header 6             | ###### Subparagraph {.heading-output}         |\n+------------------------------+-----------------------------------------------+\n| \\*italics\\*                  | *italics*                                     |\n+------------------------------+-----------------------------------------------+\n| \\*\\*bold\\*\\*                 | **bold**                                      |\n+------------------------------+-----------------------------------------------+\n| superscript\\^2\\^             | superscript^2^                                |\n+------------------------------+-----------------------------------------------+\n| \\<https://nber.org\\>         | <https://nber.org>                            |\n+------------------------------+-----------------------------------------------+\n| \\[NBER\\](https://nber.org)   | [NBER](https://nber.org)                      |\n+------------------------------+-----------------------------------------------+\n| \\![caption\\](monalisa.jpeg)  | ![Caption](images/monalisa.jpeg){width=\"134\"} |\n+------------------------------+-----------------------------------------------+\n| unordered list               | unordered list                                |\n|                              |                                               |\n| \\+ item                      | -   item                                      |\n|                              |     -   sub-item                              |\n| -   sub-item                 |         -   sub-sub-item                      |\n|                              |                                               |\n| -   sub-sub-item             |                                               |\n+------------------------------+-----------------------------------------------+\n| ordered list                 | ordered list[^write-1]                        |\n|                              |                                               |\n| 1\\. item                     | 1.  item                                      |\n|                              |                                               |\n| I. sub-item                  |     I.  sub-item                              |\n|                              |                                               |\n| i.  sub-sub-item             |         i.  sub-sub-item                      |\n+------------------------------+-----------------------------------------------+\n| inline math: \\$E = mc\\^{2}\\$ | inline math: $E = mc^{2}$                     |\n+------------------------------+-----------------------------------------------+\n| display math:                | display math:\\                                |\n|                              | $$E = mc^{2}$$                                |\n| \\$\\$E = mc\\^{2}\\$\\$          |                                               |\n+------------------------------+-----------------------------------------------+\n\n[^write-1]: Use Visual Mode to select your desired style!\n\nIf you want to add a line break add an empty line between your paragraphs, otherwise it will continue as the same text.\n\nUse \\`...\\` to add inline code: `print(hi, friend)`\n\nUse \\`\\`\\` to delimit blocks of source code:\n\n```` default\n```\nprint(hi, friend)\n```\n````\n\nMaking tables in Markdown is not complicated. The most frequently used table is the pipe table. It allows you to see alignment and captions with `:`. Tables can get complicated pretty quickly, if you ever get stuck, refer to [Quarto's table documentation](https://quarto.org/docs/authoring/tables.html).\n\n::: columns\n::: column\n```         \n| Default | Left | Middle | Right   | \n|---------|:-----|:------:|--------:|\n| Hola    | Pitt | 3.141  | Nile    | \n| Bonjour | Li   | 2.718  | Amazon  | \n| Salut   | Roth | 4.123  | Yangtze | \n\n: Table Demonstration\n```\n:::\n\n::: column\n| Default | Left | Middle |   Right |\n|---------|:-----|:------:|--------:|\n| Hola    | Pitt | 3.141  |    Nile |\n| Bonjour | Li   | 2.718  |  Amazon |\n| Salut   | Roth | 4.123  | Yangtze |\n\n: Table Demonstration\n:::\n:::\n\nIf you ever feel lost or struggle with formatting, consider using the visual editor. It provides a familiar interface and is particularly useful for creating and previewing tables. To adjust options, for example, the number of list options, simply click on the circle icon with an ellipsis next to it, and a selection menu will appear. In addition to this, the visual editor offers extensive customization options for other elements, such as images and tables.\n\n::: callout-note\nYou can copy-paste (Ctrl + C; Ctrl + V) a picture in Visual Mode!\n:::\n\nYou can learn more at [Quarto's website](https://quarto.org/).\n\n",
    "supporting": [
      "write_files"
    ],
    "filters": [],
    "includes": {}
  }
}